#!/bin/bash

# XXX TODO 
# - turn light on /off
# - delete old files from google drive
# - comment why wmv

# This script is used to capture a video recording of my dog, Shelby
# eating from her automatic dog feeder.
#
# This script is executed by a cron job, on a Raspberry Pi.
#
# ffmpeg is used to capture the video and audio from the webcam to
# an wmv file.
#
# gdrive (see NOTES file) is used to upload the wmv file to a folder
# on my google drive.
#
# The capture_audio_device is determined using 'sudo arecord -l'.

log_blank_line()
{
    echo >> $filename_log
}

# set configuration
home=/home/haid
capture_duration_secs=10
capture_audio_device=U0x46d0x825
google_drive_parent_id=1Zf2TpyN6Oyn0H93dfy-9sYJierGPGBWk
tplink_smartplug_ipaddr=192.168.1.191

# create filename variables
filename_prefix1="Shelby_`date +%a`_"
filename_prefix2=$filename_prefix1`date +%b_%d_%Y_%H%M%S`
filename_webcam=$filename_prefix2.wmv
filename_log=$filename_prefix2.log

# these files should not already exist, but remove them just to be sure
rm -f $filename_webcam $filename_log

# output message
echo "CREATING $filename_webcam" > $filename_log
log_blank_line

# turn on the lamp using TP-Link smartplug
echo "TURNING ON THE LAMP" >> $filename_log
./tplink-smartplug-master/tplink_smartplug.py -t 4tplink_smartplug_ipaddr -c on
log_blank_line

# run ffmpeg
#   -f v4l2 -i /dev/video0                   # video input, format is v4l2
#   -f alsa -i plughw:$capture_audio_device  # audio input, format alsa
#   -t $capture_duration_secs                # duration of the recording
#   -y                                       # overwrite output file if it already exists
#   -loglevel repeat+level+warning           # log only warning an higher messages
echo "RUNNING FFMPEG" >> $filename_log
sudo ffmpeg -f v4l2 -i /dev/video0 \
            -f alsa -i plughw:$capture_audio_device \
            -t $capture_duration_secs \
            -y -loglevel repeat+level+warning \
            $filename_webcam \
   >> $filename_log 2>&1
log_blank_line

# turn off the lamp using TP-Link smartplug
echo "TURNING OFF THE LAMP" >> $filename_log
./tplink-smartplug-master/tplink_smartplug.py -t $tplink_smartplug_ipaddr -c off
log_blank_line

# confirm that ffmpeg created the filename_webcam
if [ ! -f $filename_webcam ]; then
  echo "ERROR: FFMPEG FAILED TO CREATE $filename_webcam" >> $filename_log
  log_blank_line
  exit 1
fi

# log message indicating ffmpeg was successful
echo "CREATED `du -h $filename_webcam`" >> $filename_log
log_blank_line

# upload filename_webcam to google drive
echo "UPLOADING TO GDRIVE" >> $filename_log
HOME=$home $home/bin/gdrive upload -p $google_drive_parent_id  $filename_webcam \
    >> $filename_log 2>&1
if [ $? -ne 0 ]; then
  echo "ERROR: UPLOAD FAILED status=$?" >> $filename_log
  log_blank_line
  exit 1
fi
log_blank_line

# cleanup, and log completion message
rm -f $filename_webcam
echo "DONE" >> $filename_log
log_blank_line

